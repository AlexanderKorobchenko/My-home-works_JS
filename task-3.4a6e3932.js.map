{"version":3,"sources":["module_11/promisification/task/task-3.js"],"names":["randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","Promise","onSuccess","onError","delay","setTimeout","canProcess","data","id","time","logSuccess","console","log","logError","warn","amount","then","catch"],"mappings":";AACA,MAAMA,EAA4B,CAACC,EAAKC,IAC7BC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAGlDK,EAAmBC,GACd,IAAIC,QAAQ,CAACC,EAAWC,KACrBC,MAAAA,EAAQX,EAA0B,IAAK,KAE7CY,WAAW,KAGHC,GAFeV,KAAKE,SAAW,GAEnB,CACNS,MAAAA,EAAO,CAAEC,GAAIR,EAAYQ,GAAIC,KAAML,GAEzCF,EAAUK,QAEVJ,EAAQH,EAAYQ,KAEzBJ,KAILM,EAAa,EAAGF,GAAAA,EAAIC,KAAAA,MACtBE,QAAQC,mBAAmBJ,kBAAmBC,QAG5CI,EAAWL,IACbG,QAAQG,qCAAqCN,+BAGjDT,EAAgB,CAAES,GAAI,GAAIO,OAAQ,MAC7BC,KAAKN,GACLO,MAAMJ,GAEXd,EAAgB,CAAES,GAAI,GAAIO,OAAQ,MAC7BC,KAAKN,GACLO,MAAMJ,GAEXd,EAAgB,CAAES,GAAI,GAAIO,OAAQ,KAC7BC,KAAKN,GACLO,MAAMJ,GAEXd,EAAgB,CAAES,GAAI,GAAIO,OAAQ,MAC7BC,KAAKN,GACLO,MAAMJ","file":"task-3.4a6e3932.js","sourceRoot":"../src","sourcesContent":["// ================ Task 3 ================\nconst randomIntegerFromInterval = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = (transaction) => {\n    return new Promise((onSuccess, onError) => {\n        const delay = randomIntegerFromInterval(200, 500);\n\n        setTimeout(() => {\n            const canProcess = Math.random() > 0.3;\n\n            if (canProcess) {\n                const data = { id: transaction.id, time: delay };\n\n                onSuccess(data);\n            } else {\n                onError(transaction.id);\n            }\n        }, delay);\n    })\n};\n\nconst logSuccess = ({ id, time }) => {\n    console.log(`Transaction ${id} processed in ${time}ms`);\n};\n\nconst logError = id => {\n    console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\nmakeTransaction({ id: 70, amount: 150 })\n    .then(logSuccess)\n    .catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 })\n    .then(logSuccess)\n    .catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 })\n    .then(logSuccess)\n    .catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 })\n    .then(logSuccess)\n    .catch(logError);"]}